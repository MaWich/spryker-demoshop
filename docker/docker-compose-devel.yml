---

version: '3'

services:
  init:
    image: "${IMAGE}:${VERSION}"
    command: "init"
    #command:
    #  - sleep
    #  - "2d"
    restart: "no"
    depends_on:
      - zed
    links:
      - elasticsearch
      - database
      - jenkins
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=development
      - ENABLE_OPCACHE=false
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json
      - ./docker-compose-devel.d:/mnt/configs

  yves:
    image: "${IMAGE}:${VERSION}"
    build:
      context: ..
      args:
        - NETRC=$NETRC
        - APPLICATION_ENV=development
    command: "run-yves"
    restart: always
    ports:
      - "20100:80"
    links:
      - zed
      - redis
      - elasticsearch
      - phantomjs
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=development
      - ENABLE_OPCACHE=true
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json
      - ../tests:/data/shop/tests
      - ./docker-compose-devel.d:/mnt/configs

  zed:
    image: "${IMAGE}:${VERSION}"
    build:
      context: ..
      args:
        - NETRC=$NETRC
        - APPLICATION_ENV=development
    command: "run-zed"
    restart: always
    ports:
      - "20200:80"
    links:
      - redis
      - elasticsearch
      - database
      - jenkins
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=development
      - ENABLE_OPCACHE=true
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json
      - ./docker-compose-devel.d:/mnt/configs

  phantomjs:
    image: "wernight/phantomjs"
    restart: always
    ports:
      - "8910:8910"
    command: "phantomjs --webdriver=8910"

  redis:
    image: "bitnami/redis:4.0"
    restart: always
    ports:
      - "20400:6379"
    env_file: ./docker-compose.env

  elasticsearch:
    image: "elasticsearch:2.4-alpine"
    restart: always
    ports:
      - "20500:9200"
    depends_on:
      - database

  database:
    image: "postgres:9.6.3-alpine"
    restart: always
    ports:
      - "20600:5432"
    env_file: ./docker-compose.env

  jenkins:
    image: "jenkins:alpine"
    ports:
      - "20300:8080"
    links:
      - database
      - elasticsearch
      - redis
    env_file: ./docker-compose.env

  jenkins-slave:
    image: "${IMAGE}:${VERSION}"
    command: "run-jenkins"
    depends_on:
      - jenkins
    links:
      - zed
      - redis
      - elasticsearch
      - database
      - jenkins
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=development
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json
      - ./docker-compose-devel.d:/mnt/configs
